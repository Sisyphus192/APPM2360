clear all;

% Define constants and N_A'(t)
k_A = 1/5;
A_0 = 15000;
N_A_prime = @(t, N_A) -k_A*N_A;

% Generate values from out function
t = linspace(0, 50, 5001);
y1 = A_0 * exp(-k_A * t);
y2 = ode_euler(N_A_prime, t, A_0); % h = 0.01
y3 = ode_euler(N_A_prime, t(1:10:end), A_0); % h = 0.1
y4 = ode_euler(N_A_prime, t(1:100:end), A_0); % h = 1

% Colors for the lines that will be plotted
colors = [29, 29, 29;
          235, 206, 43;
          112, 44, 140;
          219, 105, 23]/255;

% Set the figure properties
fig = figure(1);

% Background color
fig.Color = [253, 253, 253]/255;

% Prevent the background color from chaning on save
fig.InvertHardcopy = 'off';

% Set axes properties
ax = gca;
ax.FontName = 'LaTeX';
ax.Title.Interpreter = 'LaTeX';
ax.XLabel.Interpreter = 'LaTeX';
ax.YLabel.Interpreter = 'LaTeX';
ax.Box = 'off';
ax.LineWidth = 1.5;
ax.FontSize = 12;


% Plot the functions
hold on;
p1 = plot(t, y1);
p2 = plot(t, y2);
p3 = plot(t(1:10:end), y3);
p4 = plot(t(1:100:end), y4);

% Set plot properties
p1.LineWidth = 3;
p1.Color =  / 255;
p2.LineWidth = 3;
p2.Color =  / 255;
p3.LineWidth = 3;
p1.Color = [] / 255;
p4.LineWidth = 3;
p1.Color = [] / 255;



legend('exact solution', 'h=0.01 Error','h=0.1 Error','h=1 Error')
title("Euler Method Approximation of N_{A}(t)")

hold off

